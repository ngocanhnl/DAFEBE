extends ../../layouts/default

block main
  .d-flex.justify-content-between.align-items-center.mb-4
    h1 Danh sách học viên - #{classData.class_name}
    a.btn.btn-secondary(href=`/${prefixAdmin}/classes`) ← Quay lại

  .row
    .col-md-8
      .card
        .card-header
          h5.mb-0 Học viên đã được duyệt (#{approvedEnrollments.length})
        .card-body
          if approvedEnrollments && approvedEnrollments.length > 0
            .table-responsive
              table.table.table-striped
                thead
                  tr
                    th Họ tên
                    th Email
                    th Số điện thoại
                    th Ngày đăng ký
                    th Trạng thái thanh toán
                tbody
                  each enrollment in approvedEnrollments
                    tr
                      td
                        strong= enrollment.student_id.fullName
                      td= enrollment.student_id.email
                      td= enrollment.student_id.phone || 'Chưa cập nhật'
                      td= moment(enrollment.enrollment_date).format('DD/MM/YYYY HH:mm')
                      td
                        if enrollment.payment_status === 'paid'
                          span.badge.badge-success Đã thanh toán
                        else if enrollment.payment_status === 'pending'
                          span.badge.badge-warning Chờ thanh toán
                        else
                          span.badge.badge-info Đã hoàn tiền
          else
            .alert.alert-info Không có học viên nào

    .col-md-4
      .card
        .card-header
          h5.mb-0 Học viên chờ giáo viên duyệt (#{pendingTeacherApprovalEnrollments.length})
        .card-body
          if pendingTeacherApprovalEnrollments && pendingTeacherApprovalEnrollments.length > 0
            each enrollment in pendingTeacherApprovalEnrollments
              .card.mb-3
                .card-body
                  h6.card-title= enrollment.student_id.fullName
                  p.card-text
                    small.text-muted= enrollment.student_id.email
                    br
                    small.text-muted= enrollment.student_id.phone || 'Chưa cập nhật'
                    br
                    small.text-muted= `Đăng ký: ${moment(enrollment.enrollment_date).format('DD/MM/YYYY HH:mm')}`
                  
                  .btn-group.btn-group-sm
                    button.btn.btn-success.approve-student-btn(
                      data-enrollment-id=enrollment._id
                      data-student-name=enrollment.student_id.fullName
                    )
                      i.fas.fa-check.mr-1
                      | Duyệt
                    button.btn.btn-danger.reject-student-btn(
                      data-enrollment-id=enrollment._id
                      data-student-name=enrollment.student_id.fullName
                    )
                      i.fas.fa-times.mr-1
                      | Từ chối
          else
            .alert.alert-info Không có học viên chờ duyệt

  // Modal cho ghi chú
  .modal.fade#teacherNotesModal(tabindex="-1")
    .modal-dialog
      .modal-content
        .modal-header
          h5.modal-title#modalTitle Ghi chú
          button.close(type="button" data-dismiss="modal")
            span &times;
        .modal-body
          .form-group
            label(for="teacherNotes") Ghi chú (tùy chọn):
            textarea#teacherNotes.form-control(rows="3" placeholder="Nhập ghi chú...")
        .modal-footer
          button.btn.btn-secondary(type="button" data-dismiss="modal") Hủy
          button.btn.btn-primary#confirmAction(type="button") Xác nhận


  script.
    let currentAction = '';
    let currentEnrollmentId = '';

    // Xử lý nút duyệt học viên
    document.querySelectorAll('.approve-student-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const enrollmentId = this.getAttribute('data-enrollment-id');
        const studentName = this.getAttribute('data-student-name');
        
        currentAction = 'approve';
        currentEnrollmentId = enrollmentId;
        
        document.getElementById('modalTitle').textContent = `Duyệt học viên: ${studentName}`;
        document.getElementById('teacherNotes').value = '';
        $('#teacherNotesModal').modal('show');
      });
    });

    // Xử lý nút từ chối học viên
    document.querySelectorAll('.reject-student-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const enrollmentId = this.getAttribute('data-enrollment-id');
        const studentName = this.getAttribute('data-student-name');
        
        currentAction = 'reject';
        currentEnrollmentId = enrollmentId;
        
        document.getElementById('modalTitle').textContent = `Từ chối học viên: ${studentName}`;
        document.getElementById('teacherNotes').value = '';
        $('#teacherNotesModal').modal('show');
      });
    });

    // Xử lý xác nhận hành động
    document.getElementById('confirmAction').addEventListener('click', function() {
      const teacherNotes = document.getElementById('teacherNotes').value;
      const classId = '#{classData._id}';
      
      const url = currentAction === 'approve' 
        ? `/admin/classes/${classId}/approve-student/${currentEnrollmentId}`
        : `/admin/classes/${classId}/reject-student/${currentEnrollmentId}`;
      
      const actionText = currentAction === 'approve' ? 'duyệt' : 'từ chối';
      
      if (confirm(`Bạn có chắc chắn muốn ${actionText} học viên này?`)) {
        fetch(url, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ teacher_notes: teacherNotes })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert(data.message);
            window.location.reload();
          } else {
            alert('Lỗi: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Có lỗi xảy ra khi xử lý yêu cầu');
        });
      }
      
      $('#teacherNotesModal').modal('hide');
    });


